import express from 'express';
import cors from 'cors';
import OpenAI from 'openai';
import dotenv from 'dotenv';

dotenv.config();

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(cors());
app.use(express.json());

// ะัะพะฒะตััะตะผ API ะบะปัั
if (!process.env.OPENAI_API_KEY) {
  console.error('โ OPENAI_API_KEY ะฝะต ะฝะฐะนะดะตะฝ ะฒ ะฟะตัะตะผะตะฝะฝัั ะพะบััะถะตะฝะธั!');
  console.log('๐ก ะะพะฑะฐะฒััะต OPENAI_API_KEY ะฒ .env ัะฐะนะป ะธะปะธ ะฒ ะฟะตัะตะผะตะฝะฝัะต ะพะบััะถะตะฝะธั');
}

// API endpoint ะดะปั ัะฐัะฐ
app.post('/api/chat', async (req, res) => {
  try {
    // ะัะพะฒะตััะตะผ API ะบะปัั
    if (!process.env.OPENAI_API_KEY) {
      return res.status(500).json({ 
        error: 'OpenAI API key not configured',
        message: 'ะะพะฑะฐะฒััะต OPENAI_API_KEY ะฒ .env ัะฐะนะป'
      });
    }

    const { messages, model = 'gpt-3.5-turbo' } = req.body;

    if (!messages || !Array.isArray(messages)) {
      return res.status(400).json({ error: 'Invalid messages payload' });
    }

    // ะกะพะทะดะฐัะผ OpenAI ะบะปะธะตะฝั
    const openai = new OpenAI({
      apiKey: process.env.OPENAI_API_KEY,
    });

    console.log('๐ค ะัะฟัะฐะฒะปัะตะผ ะทะฐะฟัะพั ะบ OpenAI...');

    const completion = await openai.chat.completions.create({
      model,
      messages,
      max_tokens: 1000,
      temperature: 0.7,
    });

    const choice = completion.choices?.[0]?.message;
    if (!choice) {
      return res.status(500).json({ error: 'No response from OpenAI' });
    }

    console.log('โ ะัะฒะตั ะฟะพะปััะตะฝ ะพั OpenAI');
    return res.status(200).json(choice);
  } catch (error) {
    console.error('โ OpenAI API error:', error);
    return res.status(500).json({ 
      error: 'OpenAI request failed',
      details: error.message 
    });
  }
});

// Health check
app.get('/api/health', (req, res) => {
  res.json({ 
    status: 'ok', 
    timestamp: new Date().toISOString(),
    openai_configured: !!process.env.OPENAI_API_KEY
  });
});

app.listen(PORT, () => {
  console.log(`๐ ะกะตัะฒะตั ะทะฐะฟััะตะฝ ะฝะฐ http://localhost:${PORT}`);
  console.log(`๐ก API ะดะพัััะฟะตะฝ ะฝะฐ http://localhost:${PORT}/api/chat`);
  console.log(`๐ Health check: http://localhost:${PORT}/api/health`);
  console.log(`๐ OpenAI API: ${process.env.OPENAI_API_KEY ? 'โ ะะฐัััะพะตะฝ' : 'โ ะะต ะฝะฐัััะพะตะฝ'}`);
}); 